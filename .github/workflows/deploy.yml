name: CICD for Serverless Application
run-name: ${{ github.actor }} is doing CICD for serverless application

on: 
  push:
    branches: [ main, "*"]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event"
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  read-from-secrets-mgr:
    runs-on: ubuntu-latest
    steps:
      - run: |
          mysecret=$(aws secretsmanager get-secret-value --secret-id prod/assignment313/secret --region us-east-1 | jq ".SecretString")
          value=$(echo "$secret" | jq -r '. | fromjson | .cmshamefulsecret')
          echo "cmshamefulsecret: $value"

  install-dependencies:
    runs-on: ubuntu-latest
    needs: read-from-secrets-mgr
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run Installation of Dependencies Commands
        run: npm install

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: install-dependencies
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm ci

      - name: serverless deploy
        uses: serverless/github-action@v3.2
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
